apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  annotations:
    app.openshift.io/connects-to: '["mysql", "redis"]'
  labels:
    app: sample-blog
    app.kubernetes.io/part-of: sample-blog
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      initContainers:
      - name: init-connection
        image: docker.io/mysql:8.0.26
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
        - |
          until mysqladmin ping -h $(MYSQL_HOST) -u $(MYSQL_USER) --password=$(MYSQL_PASSWORD) --silent; do
              echo 'waiting for mysqld to be connectable...'
              sleep 3
          done
        env:
        - name: MYSQL_HOST
          value: mysql
        - name: MYSQL_USER
          value: sampleblog
        - name: MYSQL_PASSWORD
          value: sampleblog
      containers:
      - name: django
        image: image-registry.openshift-image-registry.svc:5000/sample-blog/django:latest 
        ports:
        - containerPort: 8000
        env:
        - name: MYSQL_USER
          value: sampleblog
        - name: MYSQL_PASSWORD
          value: sampleblog
        - name: MYSQL_DATABASE
          value: sampleblog
        - name: MYSQL_HOST
          value: mysql
        - name: MYSQL_PORT
          value: "3306"
        - name: REDIS_HOST
          value: redis
        - name: BLOG_ADMIN_USER
          value: admin
        - name: BLOG_ADMIN_EMAIL
          value: admin@sample.com
        - name: BLOG_ADMIN_PASSWORD
          value: admin
        imagePullPolicy: Always
